{"version":3,"sources":["components/landingpage.jsx","components/aboutme.jsx","components/project-cards.jsx","components/projects.jsx","components/main.jsx","components/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["LandingPage","style","width","id","className","col","src","alt","Button","href","variant","download","aria-hidden","Component","AboutMe","rel","target","cardStyles","makeStyles","root","maxWidth","media","height","content","paddingBottom","DialogTitle","withStyles","theme","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","Typography","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","ProjectCards","React","useState","open","setOpen","handleClose","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","projectTitle","Dialog","aria-labelledby","dividers","projectType","projectPeriod","projectDescription","autoFocus","projectUrl","useStyles","flexGrow","paddingTop","Projects","Grid","container","item","xs","justify","Main","NavBar","Navbar","fixed","bg","Brand","activeClass","to","spy","smooth","offset","duration","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c28bacba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\" }} id=\"landingpage\">\r\n        <Grid className=\"landing-grid\">\r\n          <Cell col={12}>\r\n            <img\r\n              src=\"assets/images/avatar.png\"\r\n              alt=\"avatar\"\r\n              className=\"avatar-img\"\r\n            />\r\n          </Cell>\r\n          <div className=\"banner-text\">\r\n            <h1>Hey, I am Ming Hong!</h1>\r\n            <hr />\r\n            <h4>Computer Engineering Student</h4>\r\n            <h4>National University of Singapore</h4>\r\n            <Button\r\n              href=\"Ming_Hong_LIM_CV.pdf\"\r\n              variant=\"outline-primary\"\r\n              download\r\n            >\r\n              Download my CV here!\r\n            </Button>\r\n            <p>\r\n              <i className=\"fa fa-map-marker\" aria-hidden=\"true\" />\r\n              Singapore\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"aboutme-text\" id=\"aboutme\">\r\n        <h1>About Me</h1>\r\n        <hr />\r\n        <p>\r\n          I am a final year student currently pursuing a Bachelor's degree in\r\n          Computer Engineering in the National University of Singapore. Since\r\n          young, I have been perpetually curious about the challenges different\r\n          communities are facing around the world. With the rapid advancement in\r\n          technology in recent times, there are many ways we can formulate\r\n          solutions for these challenges. Therefore, it is my personal goal to\r\n          be part of the digital revolution and explore ways in which technology\r\n          can be used for the common good.\r\n        </p>\r\n        <p>Connect with me at:</p>\r\n        <div className=\"social-links\">\r\n          {/* Linkedin */}\r\n          <a\r\n            href=\"https://www.linkedin.com/in/limminghong/\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n          </a>\r\n\r\n          {/* Github */}\r\n          <a\r\n            href=\"https://github.com/Limminghong\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n          </a>\r\n\r\n          {/* Instagram */}\r\n          <a\r\n            href=\"https://www.instagram.com/limminghong/\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\r\n          </a>\r\n\r\n          {/* Facebook */}\r\n          <a\r\n            href=\"https://www.facebook.com/lim.m.hong.9\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            <i className=\"fa fa-facebook\" aria-hidden=\"true\" />\r\n          </a>\r\n\r\n          {/* E-Mail */}\r\n          <a\r\n            href=\"mailto: minghonglim@gmail.com\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            <i className=\"fa fa-envelope\" aria-hidden=\"true\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst cardStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 250,\r\n  },\r\n  content: {\r\n    height: 100,\r\n    paddingBottom: 100,\r\n  },\r\n});\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function ProjectCards(props) {\r\n  const classes = cardStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root} onClick={handleClickOpen}>\r\n        <CardActionArea>\r\n          <CardMedia className={classes.media} image={props.image} />\r\n          <CardContent className={classes.content}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {props.projectTitle}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          <h3>{props.projectTitle}</h3>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <img src={props.image} alt=\"Project Image\" className=\"dialog-image\" />\r\n          <Typography gutterBottom>\r\n            <h4>{props.projectType}</h4>\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <p>{props.projectPeriod}</p>\r\n          </Typography>\r\n          <Typography gutterBottom>{props.projectDescription}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus href={props.projectUrl} color=\"primary\">\r\n            See Project\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport ProjectCards from \"./project-cards\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n  },\r\n}));\r\n\r\nexport default function Projects() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"projects-body\" id=\"projects\">\r\n      <h1>Projects</h1>\r\n      <hr />\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <ProjectCards\r\n                image=\"assets/images/insincere-banner.png\"\r\n                projectTitle=\"Quora Insincere Questions Classification\"\r\n                projectType=\"Machine Learning / Natural Language Processing\"\r\n                projectPeriod=\"Aug 2019 - Nov 2019\"\r\n                projectDescription=\"Making use of Bayesian, Regression and deep learning models (RNN, LSTM, GRU), our group aims to accurately differentiate insincere questions from sincere questions. Knowledge of NLP is applied as well, including rigorous preprocessing of data and making use of pre-trained embeddings.\"\r\n                projectUrl=\"https://isteps.comp.nus.edu.sg/event/15th-steps/module/CS3244/project/4\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <ProjectCards\r\n                image=\"assets/images/corppro-banner.png\"\r\n                projectTitle=\"CorpPro\"\r\n                projectType=\"Desktop Application\"\r\n                projectPeriod=\"Aug 2018 - Nov 2018\"\r\n                projectDescription=\"CorpPro is a Java desktop application that act as your one stop address book for all contacts management needs. It contains all the essential functionality to improve your productivity.\"\r\n                projectUrl=\"https://github.com/CS2113-AY1819S1-W12-3/main\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <ProjectCards\r\n                image=\"assets/images/studylah-banner.jpeg\"\r\n                projectTitle=\"StudyLah\"\r\n                projectType=\"Mobile Application\"\r\n                projectPeriod=\"May 2018 - Sep 2018\"\r\n                projectDescription=\"An interactive android application which serves as a vehicle to allow students to book, join, and gain from various study sessions occurring across the campus. Moreover, apart from being used as a platform to organise study sessions between various groups of students across NUS. It gives NUS students, especially undergraduates and freshmen, the ability to collaborate and consolidate their strengths and weaknesses within certain areas of their academic learning.\"\r\n                projectUrl=\"https://github.com/Limminghong/StudyLah\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Grid } from \"react-mdl\";\r\n\r\nimport LandingPage from \"./landingpage\";\r\nimport AboutMe from \"./aboutme\";\r\nimport Projects from \"./projects\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main-body\">\r\n        <Grid>\r\n          <LandingPage />\r\n          <AboutMe />\r\n          <Projects />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand>\r\n            <button className=\"nav-brand\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"landingpage\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-90}\r\n                duration={500}\r\n              >\r\n                Ming Hong\r\n              </Link>\r\n            </button>\r\n          </Navbar.Brand>\r\n          <button className=\"nav-links\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"aboutme\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={-90}\r\n              duration={500}\r\n            >\r\n              About Me\r\n            </Link>\r\n          </button>\r\n          <button className=\"nav-links\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"projects\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={-90}\r\n              duration={500}\r\n            >\r\n              Projects\r\n            </Link>\r\n          </button>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport Main from \"./components/main.jsx\";\r\nimport NavBar from \"./components/navbar.jsx\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"react-mdl/extra/material.css\";\r\nimport \"react-mdl/extra/material.js\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}